name: Move LeetCode Solutions

on:
  workflow_dispatch:  # 수동 실행 옵션 유지
  push:
    paths:
      - '[0-9][0-9][0-9][0-9]-*/**'  # LeetHub가 생성하는 폴더 패턴 (예: 0020-valid-parentheses)

permissions:
  contents: write

jobs:
  move-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git pull origin main --rebase

      - name: Move LeetCode solutions
        run: |
          # 디버깅을 위한 현재 디렉토리 내용 출력
          echo "Current directory contents:"
          ls -la
          
          # LeetCode 폴더가 없다면 생성
          mkdir -p LeetCode
          
          # 변경된 파일 목록 확인
          echo "Changed files in this push:"
          git diff --name-only HEAD^ HEAD
          
          # LeetHub가 생성한 폴더들을 LeetCode 폴더로 이동
          found=0
          for d in [0-9][0-9][0-9][0-9]-*; do
            if [ -d "$d" ] && [ "$d" != "LeetCode" ]; then
              echo "Moving directory: $d"
              if [ -d "LeetCode/$d" ]; then
                echo "Directory LeetCode/$d already exists, merging contents..."
                cp -r "$d"/* "LeetCode/$d/" 2>/dev/null || true
                rm -rf "$d"
              else
                mv "$d" "LeetCode/"
              fi
              found=1
            fi
          done
          
          if [ $found -eq 0 ]; then
            echo "No matching directories found to move"
          fi
          
      - name: Commit & Push changes
        run: |
          # 변경사항이 있는지 확인
          if git status --porcelain | grep -q .; then
            # 최신 변경사항 다시 pull
            git pull origin main --rebase || true
            
            git add -A
            git commit -m "chore: Move LeetCode solutions to LeetCode folder" || echo "Nothing to commit"
            
            # push 실패 시 재시도 로직
            max_retries=2
            retry_count=0
            
            while [ $retry_count -lt $max_retries ]; do
              if git push origin main; then
                echo "Successfully pushed changes"
                break
              else
                retry_count=$((retry_count + 1))
                echo "Push failed, retrying... ($retry_count/$max_retries)"
                git pull origin main --rebase || true
                if [ $retry_count -lt $max_retries ]; then
                  sleep 5
                fi
              fi
            done
            
            if [ $retry_count -eq $max_retries ]; then
              echo "Failed to push after $max_retries retries"
              exit 1
            fi
          else
            echo "No changes to commit"
          fi
